SQL Queries based on Questions:
x= area name
y= year

1. Fertility Rates
IF COMMUNITY:
  select communities.name, Avg(household.NOC)
  from household join communities on (PUMA = communityID and communities.year = household.year)
  where communities.name = 'South Rhode Island--Washington County' and household.year = 2012
  group by communities.name;

IF STATE:
  select states.name, Avg(household.NOC)
  from (household join communities on (PUMA = communityID and communities.year = household.year))
    join states on (communities.BELONGSTO = states.stateID and communities.year = states.year)
  where states.name = 'Rhode Island' and household.year = 2012
  group by states.name;
 
 4. Median Age vs. Property Value
 IF COMMUNITY:
select communities.name, Median(person.Agep)
from person join household on (person.serialNo = household.serialNo and  person.year = household.year)
  join communities on (PUMA = communityID and communities.year = household.year)
where communities.name = x and person.year = y
group by communities.name;
    
select communities.name, Avg(coalesce(household.VALP, 0))
from household join communities on (PUMA = communityID and communities.year = household.year)
where communities.name = 'South Rhode Island--Washington County' and household.year = 2012 and household.NP != 0
group by communities.name;

IF STATE:
select states.name, Median(person.Agep)
from person join household on (person.serialNo = household.serialNo and  person.year = household.year)
    join communities on (PUMA = communityID and communities.year = household.year) join states on 
    (communities.BELONGSTO = states.stateID and communities.year = states.year)
where states.name = x  and person.year = y
group by states.name;
      
select states.name, Avg(coalesce(household.VALP, 0))
from household join communities on (PUMA = communityID and communities.year = household.year) join states on 
  (communities.BELONGSTO = states.stateID and communities.year = states.year)
where states.name = 'Rhode Island' and household.year = 2012 and household.NP != 0
group by states.name;

5. Languages
IF COMMUNITY:
select communities.name, Count(distinct person.LANP)
from person join HOUSEHOLD on (person.serialNo = household.serialNo and person.year = household.year)
  join communities on (household.PUMA = communities.communityID and household.year = communities.year)
where communities.name = 'South Rhode Island--Washington County' and person.year = 2012
group by communities.name;
    
IF STATE:
select states.name, Count(distinct person.LANP)
from person join HOUSEHOLD on (person.serialNo = household.serialNo and person.year = household.year)
  join communities on (household.PUMA = communities.communityID and household.year = communities.year)
  join states on (communities.belongsTo = states.stateID and communities.year = states.year)
where states.name = 'Rhode Island' and person.year = 2012
group by states.name;

1. & 5. Economic Qrowth = Avg Income
IF COMMUNITY:
select communities.name, Avg(isum)
from (select sum (income.wagp) as isum from income join household on (income.serialNo = household.serialNo and income.year = household.year) 
  join communities on (household.PUMA = communities.communityID and household.year = communities.year)
  where income.year = 2015 and communities.name = 'South Rhode Island--Washington County'
  group by communities.name, household.serialNo), communities
where communities.name = 'South Rhode Island--Washington County' and communities.year = 2015
group by communities.name;
  
IF STATE:
select states.name, Avg(isum)
from (select sum (income.wagp) as isum from income join household on (income.serialNo = household.serialNo and income.year = household.year) 
  join communities on (household.PUMA = communities.communityID and household.year = communities.year)
  join states on (communities.belongsTo = states.stateID and communities.year = states.year)
where income.year = 2015 and states.name = 'Rhode Island'
group by states.name, household.serialNo), states
where states.name = 'Rhode Island' and states.year = 2015
group by states.name;


3. Industry Growth vs Migration
IF COMMUNITY:
  select i1.communities.name, i1.industry.name, MAX(COUNT(distinct i1.personalID) - COUNT(distinct i2.personalID))
  from (select * from ((industry join person on (industry.industryID = person.worksFor and industry.year = person.year)) join
   household on (person.serialNo = household.serialNo and person.year = household.year)) join communities on (household.isWithin =
   communities.communityID and household.year = communities.year) where communities.name = x and year = y) as i1, 
   (select * from ((industry join person on (industry.industryID = person.worksFor and industry.year = person.year)) join
   household on (person.serialNo = household.serialNo and person.year = household.year)) join communities on (household.isWithin =
   communities.communityID and household.year = communities.year) where communities.name = x and year = y) as i2
   where i1.industryID = i2.industryID
   having (Count(distinct i1.personalID) - Count(distinct i2.personalID)) = 
    MAX(COUNT(distinct i1.personalID) - COUNT(distinct i2.personalID));
    
  select communities.name, Count(distinct personalID)
  from (person join household on (person.serialNo = household.serialNo and person.year = household.year)) join communities on 
    (household.isWithin = communities.communityID and household.year= communities.year)
  where communities.name = x and year = y and mobilityStatus = 2;
 
IF STATE:
  select i1.states.name, i1.industry.name, MAX(COUNT(distinct i1.personalID) - COUNT(distinct i2.personalID))
  from (select * from (((industry join person on (industry.industryID = person.worksFor and industry.year = person.year)) join
   household on (person.serialNo = household.serialNo and person.year = household.year)) join communities on (household.isWithin =
   communities.communityID and household.year = communities.year)) join states on (communities.belongsTo = states.stateID and 
   communities.year = states.year) where states.name = x and year = y) as i1, 
   (select * from (((industry join person on (industry.industryID = person.worksFor and industry.year = person.year)) join
   household on (person.serialNo = household.serialNo and person.year = household.year)) join communities on (household.isWithin =
   communities.communityID and household.year = communities.year)) join states on (communities.belongsTo = states.stateID and
   communities.year = states.year) where states.name = x and year = y) as i2
   where i1.industryID = i2.industryID
   having (Count(distinct i1.personalID) - Count(distinct i2.personalID)) = 
    MAX(COUNT(distinct i1.personalID) - COUNT(distinct i2.personalID));

  select states.name, Count(distinct personalID)
  from ((person join household on (person.serialNo = household.serialNo and person.year = household.year)) join communities on 
    (household.isWithin = communities.communityID and household.year= communities.year)) join states on (communities.belongsTo = 
    states.stateID and communities.year = states.year)
  where states.name = x and year = y and mobilityStatus = 2;

2. Poverty
IF COMMUNITY:
  select communities.name, Count(distinct personalID)
  from ((income join person on (income.pID = person.personalID and income.year = person.year)) join household on (person.serialNo = 
    household.serialNo and person.year = household.year)) join communities on (household.isWithin = communities.communityID and 
    household.year = communities.year)
  where communities.name = x and year = y
  having povertyIncomeRatio < 100;
  
IF STATE:
  select states.name, Count(distinct personalID)
  from (((income join person on (income.pID = person.personalID and income.year = person.year)) join household on (person.serialNo = 
    household.serialNo and person.year = household.year)) join communities on (household.isWithin = communities.communityID and 
    household.year = communities.year)) join states on (communities.belongsTo = states.stateID and communities.year = states.year)
  where states.name = x and year = y
  having povertyIncomeRatio < 100;

OTHER QUERIES:

Most Widely Spoken Language:
IF COMMUNITY:
  select communities.name, primarylanguage.name
  from ((primarylanguage join person on languageID = person.speaks) join household on (person.serialNo = household.serialNo and 
    person.year = household.year)) join communities on (household.isWithin = communities.communityID and household.year = 
    communities.year)
  where communities = x aand year = y
  group by languageID
  having Count(*) = (select Max(Count(*)) from ((primarylanguage join person on languageID = person.speaks) join household on (person.serialNo = household.serialNo and 
    person.year = household.year)) join communities on (household.isWithin = communities.communityID and household.year = 
    communities.year) where communities.name = x and year = y group by languageID);

IF STATE:
  select states.name, primarylanguage.name
  from (((primarylanguage join person on languageID = person.speaks) join household on (person.serialNo = household.serialNo and 
    person.year = household.year)) join communities on (household.isWithin = communities.communityID and household.year = 
    communities.year)) join states on (communities.belongsTo = states.stateID and communities.year = states.year)
  where states = x aand year = y
  group by languageID
  having Count(*) = (select Max(Count(*)) from (((primarylanguage join person on languageID = person.speaks) join household on (person.serialNo = household.serialNo and 
    person.year = household.year)) join communities on (household.isWithin = communities.communityID and household.year = 
    communities.year)) join states on (communities.belongsTo = states.stateID and communities.year and states.year)
    where communities.name = x and year = y group by languageID);
    
